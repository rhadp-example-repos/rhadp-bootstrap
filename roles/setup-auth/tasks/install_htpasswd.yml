# Implement your pre-install deployment tasks here
# -------------------------------------------------

- name: generate htpasswd file
  template:
    src: "htpasswd.j2"
    dest: "roles/setup-auth/files/users.htpasswd"
    owner: "{{ ansible_user_id }}"
    mode: 0664

- name: create htpasswd secret from htpasswd file
  shell: |
    oc create secret generic htpasswd-secret \
      --from-file=htpasswd=roles/setup-auth/files/users.htpasswd \
      -n openshift-config \
      --kubeconfig="$HOME/.kube/{{ cluster_name }}"

- name: update oauth configuration
  k8s:
    merge_type:
      - strategic-merge
      - merge
    definition: "{{ lookup('template', 'oauth-htpasswd.yml') | from_yaml }}"
    state: present
    kubeconfig: "{{ local_kubeconfig_file }}"

- name: set up cluster admin user
  k8s:
    merge_type:
      - strategic-merge
      - merge
    definition: "{{ lookup('template', 'cluster_role_binding.j2') | from_yaml }}"
    state: present
    kubeconfig: "{{ local_kubeconfig_file }}"
  when: htpasswd_admin_user is defined

- name: add the admin user to the admin group
  shell: |
    oc adm groups add-users {{ cluster_admin_group }} {{ htpasswd_admin_user }} \
      --kubeconfig="$HOME/.kube/{{ cluster_name }}"
  when: htpasswd_admin_user is defined

- name: remove kubeadmin user secret
  k8s:
    api_version: v1
    kind: Secret
    namespace: kube-system
    name: kubeadmin
    state: absent
    kubeconfig: "{{ local_kubeconfig_file }}"
  when: remove_kubeadmin | bool

- name: remove self-provisioner
  shell: |
    oc adm policy remove-cluster-role-from-group \
      self-provisioner system:authenticated:oauth \
      --kubeconfig="$HOME/.kube/{{ cluster_name }}"
  when: remove_selfprovisioning | bool

- name: remove the htpasswd file
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "roles/setup-auth/files/users.htpasswd"
